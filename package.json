{
  "name": "idris-vscode",
  "publisher": "meraymond",
  "displayName": "Idris Language",
  "description": "Language support for Idris and Idris 2.",
  "version": "0.0.14",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/meraymond2/idris-vscode"
  },
  "engines": {
    "vscode": "^1.44.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:idris2",
    "onLanguage:idris",
    "onLanguage:lidr",
    "onCommand:idris.activate"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "idris.activate",
        "title": "Idris: Activate Extension"
      },
      {
        "command": "idris.addClause",
        "title": "Idris: Add Clause"
      },
      {
        "command": "idris.addMissing",
        "title": "Idris: Add Missing"
      },
      {
        "command": "idris.apropos",
        "title": "Idris: Apropos"
      },
      {
        "command": "idris.aproposSelection",
        "title": "Idris: Apropos At Cursor"
      },
      {
        "command": "idris.browseNamespace",
        "title": "Idris: Browse Namespace"
      },
      {
        "command": "idris.caseSplit",
        "title": "Idris: Case Split"
      },
      {
        "command": "idris.docsFor",
        "title": "Idris: Documentation For"
      },
      {
        "command": "idris.docsForSelection",
        "title": "Idris: Documentation At Cursor"
      },
      {
        "command": "idris.generateDef",
        "title": "Idris: Generate Definition"
      },
      {
        "command": "idris.interpretSelection",
        "title": "Idris: Interpret Selection"
      },
      {
        "command": "idris.metavariables",
        "title": "Idris: List Metavariables"
      },
      {
        "command": "idris.printDefinition",
        "title": "Idris: Print Definition"
      },
      {
        "command": "idris.printDefinitionSelection",
        "title": "Idris: Print Definition At Cursor"
      },
      {
        "command": "idris.makeCase",
        "title": "Idris: Make Case"
      },
      {
        "command": "idris.makeLemma",
        "title": "Idris: Make Lemma"
      },
      {
        "command": "idris.makeWith",
        "title": "Idris: Make With"
      },
      {
        "command": "idris.proofSearch",
        "title": "Idris: Proof Search"
      },
      {
        "command": "idris.typeAt",
        "title": "Idris: Type At"
      },
      {
        "command": "idris.typeOf",
        "title": "Idris: Type Of"
      },
      {
        "command": "idris.version",
        "title": "Idris: Version"
      }
    ],
    "configuration": {
      "title": "Idris",
      "properties": {
        "idris.idrisPath": {
          "type": "string",
          "default": "idris",
          "description": "Command to start Idris process."
        },
        "idris.idris2Mode": {
          "type": "boolean",
          "default": false,
          "description": "Configure the extension to work with Idris2. Targets the latest release, currently 0.2.1. Note that not all commands are implemented yet."
        },
        "idris.autosave": {
          "type": "string",
          "enum": [
            "always",
            "prompt",
            "never"
          ],
          "description": "Whether to save the current file before executing a command. Commands that read files operate on the state of that file on disk, so if it is not saved, the command might produce inaccurate output."
        },
        "idris.hoverAction": {
          "type": "string",
          "enum": [
            "Type Of",
            "Type At",
            "Nothing"
          ],
          "enumDescriptions": [
            "Get the type of the current variable. Not context aware, so will be incorrect for local variables.",
            "Get the type of the current variable. More accurate than Type Of, but Idris 2 only.",
            "Disable hover behaviour."
          ],
          "default": "Type Of",
          "description": "Configure which command should be called when hovering over a variable."
        },
        "idris.processArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Optional additional flags to pass to the Idris IDE process, e.g. `-p contrib`."
        }
      }
    },
    "languages": [
      {
        "id": "idris",
        "aliases": [
          "Idris",
          "idris"
        ],
        "configuration": "./language-configuration.json",
        "extensions": [
          ".idr"
        ]
      },
      {
        "id": "ipkg",
        "aliases": [
          "iPKG",
          "ipkg"
        ],
        "extensions": [
          ".ipkg"
        ]
      },
      {
        "id": "lidr",
        "aliases": [
          "Literate Idris",
          "lidr"
        ],
        "configuration": "./language-configuration.json",
        "extensions": [
          ".lidr"
        ]
      },
      {
        "id": "idris-markdown",
        "aliases": [],
        "configuration": "./language-configuration.json",
        "extensions": []
      }
    ],
    "grammars": [
      {
        "language": "idris",
        "scopeName": "source.idris",
        "path": "./syntaxes/idris.tmLanguage.json"
      },
      {
        "language": "ipkg",
        "scopeName": "source.ipkg",
        "path": "./syntaxes/ipkg.tmLanguage.json"
      },
      {
        "language": "lidr",
        "scopeName": "source.idris.literate",
        "path": "./syntaxes/lidr.tmLanguage.json"
      },
      {
        "language": "idris-markdown",
        "scopeName": "markdown.idris.codeblock",
        "path": "./syntaxes/idris-codeblock.tmLanguage.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.idris": "idris"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "tsc --noEmit && prettier --write 'src/**/*.ts' && eslint src --ext .ts --fix",
    "test": "NODE_ENV=test npx mocha --recursive --require ts-node/register --extensions ts 'test/**/*.ts'"
  },
  "dependencies": {
    "idris-ide-client": "0.1.6"
  },
  "devDependencies": {
    "@types/chai": "4.2.21",
    "@types/mocha": "8.2.3",
    "@types/node": "14.17.2",
    "@types/vscode": "1.44.0",
    "@typescript-eslint/eslint-plugin": "4.28.2",
    "@typescript-eslint/parser": "4.28.2",
    "chai": "4.3.4",
    "eslint": "7.30.0",
    "mocha": "9.2.2",
    "prettier": "2.3.2",
    "ts-node": "10.1.0",
    "typescript": "4.3.5",
    "vsce": "1.100.1"
  }
}
